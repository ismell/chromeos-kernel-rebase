From 73c71923fe36ffe9f162acaf8ab4cadde3364dd9 Mon Sep 17 00:00:00 2001
From: Jett Rink <jettrink@chromium.org>
Date: Fri, 12 Apr 2019 08:52:44 -0600
Subject: [PATCH] CHROMIUM: free ishtp buffer before sending event

Free the buffer as soon as we can to ensure we are using the least
amount of buffers as possible.

BRANCH=none
BUG=b:130281042
TEST=cros_ish works without issue

Change-Id: I02ce9bbb614a4c201b5e9b3e902b755c19368b09
Signed-off-by: Jett Rink <jettrink@chromium.org>
Reviewed-on: https://chromium-review.googlesource.com/1565608
Commit-Ready: ChromeOS CL Exonerator Bot <chromiumos-cl-exonerator@appspot.gserviceaccount.com>
Reviewed-by: Nick Crews <ncrews@chromium.org>
Reviewed-by: Rushikesh S Kadam <rushikesh.s.kadam@intel.com>

[rebase52(rrangel): Context conflict]
Signed-off-by: Raul E Rangel <rrangel@chromium.org>
---
 drivers/platform/chrome/cros_ec_ishtp.c | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

diff --git a/drivers/platform/chrome/cros_ec_ishtp.c b/drivers/platform/chrome/cros_ec_ishtp.c
index f2c0925ee9c6..402f5d3b835a 100644
--- a/drivers/platform/chrome/cros_ec_ishtp.c
+++ b/drivers/platform/chrome/cros_ec_ishtp.c
@@ -301,6 +301,10 @@ static void process_recv(struct ishtp_cl *cros_ish_cl,
 		       rb_in_proc->buffer.data, data_len);
 
 error_wake_up:
+		/* Free the buffer since we copied data or didn't need it */
+		ishtp_cl_io_rb_recycle(rb_in_proc);
+		rb_in_proc = NULL;
+
 		/* Set flag before waking up the caller */
 		client_data->response.received = true;
 
@@ -310,7 +314,14 @@ static void process_recv(struct ishtp_cl *cros_ish_cl,
 		break;
 
 	case CROS_MKBP_EVENT:
-		/* The event system doesn't send any data in buffer */
+		/* Free the buffer. This is just an event without data */
+		ishtp_cl_io_rb_recycle(rb_in_proc);
+		rb_in_proc = NULL;
+		/*
+		 * Set timestamp from beginning of function since we actually
+		 * got an incoming MKBP event
+		 */
+		client_data->ec_dev->last_event_time = timestamp;
 		schedule_work(&client_data->work_ec_evt);
 
 		break;
@@ -320,8 +331,9 @@ static void process_recv(struct ishtp_cl *cros_ish_cl,
 	}
 
 end_error:
-	/* Free the buffer */
-	ishtp_cl_io_rb_recycle(rb_in_proc);
+	/* Free the buffer if we already haven't */
+	if (rb_in_proc)
+		ishtp_cl_io_rb_recycle(rb_in_proc);
 
 	up_read(&init_lock);
 }
-- 
2.23.0.rc1.153.gdeed80330f-goog

