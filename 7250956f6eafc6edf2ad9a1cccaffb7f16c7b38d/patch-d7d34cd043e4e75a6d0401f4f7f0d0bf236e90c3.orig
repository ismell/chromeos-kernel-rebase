From d7d34cd043e4e75a6d0401f4f7f0d0bf236e90c3 Mon Sep 17 00:00:00 2001
From: Matthias Kaehlcke <mka@chromium.org>
Date: Mon, 11 Feb 2019 16:47:50 -0800
Subject: [PATCH] FIXUP: FROMLIST: scsi: ufs: set the device reference clock
 setting

Resolve the delta with the patch that landed upstream (9e1e8a757080
"scsi: ufs: set the device reference clock setting").

Also remove the now unnecessary export of
ufshcd_parse_dev_ref_clk_freq() which was added by fdc32e207490
("FIXUP: FROMLIST: scsi: ufs: Add configfs support for UFS
provisioning").

BUG=b:124248516
TEST=boot on cheza

Change-Id: I4e8b120f71ad863bc40876b9a838b1da8a2fce00
Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
Reviewed-on: https://chromium-review.googlesource.com/1467002
Reviewed-by: Evan Green <evgreen@chromium.org>
---
 .../devicetree/bindings/ufs/ufshcd-pltfrm.txt |  6 ++
 drivers/scsi/ufs/ufs.h                        |  2 +-
 drivers/scsi/ufs/ufshcd-pltfrm.c              |  2 -
 drivers/scsi/ufs/ufshcd.c                     | 59 +++++++++----------
 drivers/scsi/ufs/ufshcd.h                     |  2 +-
 5 files changed, 35 insertions(+), 36 deletions(-)

diff --git a/Documentation/devicetree/bindings/ufs/ufshcd-pltfrm.txt b/Documentation/devicetree/bindings/ufs/ufshcd-pltfrm.txt
index 69a06a1b732e..5111e9130bc3 100644
--- a/Documentation/devicetree/bindings/ufs/ufshcd-pltfrm.txt
+++ b/Documentation/devicetree/bindings/ufs/ufshcd-pltfrm.txt
@@ -36,6 +36,12 @@ Optional properties:
 - clocks                : List of phandle and clock specifier pairs
 - clock-names           : List of clock input name strings sorted in the same
                           order as the clocks property.
+			  "ref_clk" indicates reference clock frequency.
+			  UFS host supplies reference clock to UFS device and UFS device
+			  specification allows host to provide one of the 4 frequencies (19.2 MHz,
+			  26 MHz, 38.4 MHz, 52MHz) for reference clock. This "ref_clk" entry is
+			  parsed and used to update the reference clock setting in device.
+			  Defaults to 26 MHz(as per specification) if not specified by host.
 - freq-table-hz		: Array of <min max> operating frequencies stored in the same
                           order as the clocks property. If this property is not
 			  defined or a value in the array is "0" then it is assumed
diff --git a/drivers/scsi/ufs/ufs.h b/drivers/scsi/ufs/ufs.h
index a2e76b1b935c..b3aaea8cd776 100644
--- a/drivers/scsi/ufs/ufs.h
+++ b/drivers/scsi/ufs/ufs.h
@@ -388,7 +388,7 @@ enum ufs_ref_clk_freq {
 };
 
 struct ufs_ref_clk {
-	u32 freq_hz;
+	unsigned long freq_hz;
 	enum ufs_ref_clk_freq val;
 };
 
diff --git a/drivers/scsi/ufs/ufshcd-pltfrm.c b/drivers/scsi/ufs/ufshcd-pltfrm.c
index 2e2875d51caf..895a9b5ac989 100644
--- a/drivers/scsi/ufs/ufshcd-pltfrm.c
+++ b/drivers/scsi/ufs/ufshcd-pltfrm.c
@@ -343,8 +343,6 @@ int ufshcd_pltfrm_init(struct platform_device *pdev,
 	pm_runtime_set_active(&pdev->dev);
 	pm_runtime_enable(&pdev->dev);
 
-	ufshcd_parse_dev_ref_clk_freq(hba);
-
 	ufshcd_init_lanes_per_dir(hba);
 
 	err = ufshcd_init(hba, mmio_base, irq);
diff --git a/drivers/scsi/ufs/ufshcd.c b/drivers/scsi/ufs/ufshcd.c
index 95009ff0c207..52e88ed0fe2c 100644
--- a/drivers/scsi/ufs/ufshcd.c
+++ b/drivers/scsi/ufs/ufshcd.c
@@ -6587,33 +6587,21 @@ static struct ufs_ref_clk ufs_ref_clk_freqs[] = {
 	{0, REF_CLK_FREQ_INVAL},
 };
 
-static inline enum ufs_ref_clk_freq
-ufs_get_bref_clk_from_hz(u32 freq)
+static enum ufs_ref_clk_freq
+ufs_get_bref_clk_from_hz(unsigned long freq)
 {
-	int i = 0;
+	int i;
 
-	while (ufs_ref_clk_freqs[i].freq_hz != freq) {
-		if (!ufs_ref_clk_freqs[i].freq_hz)
-			return REF_CLK_FREQ_INVAL;
-		i++;
-	}
+	for (i = 0; ufs_ref_clk_freqs[i].freq_hz; i++)
+		if (ufs_ref_clk_freqs[i].freq_hz == freq)
+			return ufs_ref_clk_freqs[i].val;
 
-	return ufs_ref_clk_freqs[i].val;
+	return REF_CLK_FREQ_INVAL;
 }
 
-void ufshcd_parse_dev_ref_clk_freq(struct ufs_hba *hba)
+void ufshcd_parse_dev_ref_clk_freq(struct ufs_hba *hba, struct clk *refclk)
 {
-	struct device *dev = hba->dev;
-	struct device_node *np = dev->of_node;
-	struct clk *refclk = NULL;
-	u32 freq = 0;
-
-	if (!np)
-		return;
-
-	refclk = of_clk_get_by_name(np, "ref_clk");
-	if (!refclk)
-		return;
+	unsigned long freq;
 
 	freq = clk_get_rate(refclk);
 
@@ -6622,39 +6610,38 @@ void ufshcd_parse_dev_ref_clk_freq(struct ufs_hba *hba)
 
 	if (hba->dev_ref_clk_freq == REF_CLK_FREQ_INVAL)
 		dev_err(hba->dev,
-		"%s: invalid ref_clk setting = %d\n",
-		__func__, freq);
+		"invalid ref_clk setting = %ld\n", freq);
 }
-EXPORT_SYMBOL(ufshcd_parse_dev_ref_clk_freq);
 
 static int ufshcd_set_dev_ref_clk(struct ufs_hba *hba)
 {
-	int err, ref_clk = -1;
+	int err;
+	u32 ref_clk;
 	u32 freq = hba->dev_ref_clk_freq;
 
 	err = ufshcd_query_attr_retry(hba, UPIU_QUERY_OPCODE_READ_ATTR,
 			QUERY_ATTR_IDN_REF_CLK_FREQ, 0, 0, &ref_clk);
 
 	if (err) {
-		dev_err(hba->dev, "%s: failed reading bRefClkFreq. err = %d\n",
-			 __func__, err);
+		dev_err(hba->dev, "failed reading bRefClkFreq. err = %d\n",
+			err);
 		goto out;
 	}
 
-	if (ref_clk == hba->dev_ref_clk_freq)
+	if (ref_clk == freq)
 		goto out; /* nothing to update */
 
 	err = ufshcd_query_attr_retry(hba, UPIU_QUERY_OPCODE_WRITE_ATTR,
 			QUERY_ATTR_IDN_REF_CLK_FREQ, 0, 0, &freq);
 
 	if (err) {
-		dev_err(hba->dev, "%s: bRefClkFreq setting to %u Hz failed\n",
-		__func__, ufs_ref_clk_freqs[freq].freq_hz);
+		dev_err(hba->dev, "bRefClkFreq setting to %lu Hz failed\n",
+			ufs_ref_clk_freqs[freq].freq_hz);
 		goto out;
 	}
 
-	dev_dbg(hba->dev, "%s: bRefClkFreq setting to %u Hz succeeded\n",
-		__func__, ufs_ref_clk_freqs[freq].freq_hz);
+	dev_dbg(hba->dev, "bRefClkFreq setting to %lu Hz succeeded\n",
+			ufs_ref_clk_freqs[freq].freq_hz);
 
 out:
 	return err;
@@ -7215,6 +7202,14 @@ static int ufshcd_init_clocks(struct ufs_hba *hba)
 			goto out;
 		}
 
+		/*
+		 * Parse device ref clk freq as per device tree "ref_clk".
+		 * Default dev_ref_clk_freq is set to REF_CLK_FREQ_INVAL
+		 * in ufshcd_alloc_host().
+		 */
+		if (!strcmp(clki->name, "ref_clk"))
+			ufshcd_parse_dev_ref_clk_freq(hba, clki->clk);
+
 		if (clki->max_freq) {
 			ret = clk_set_rate(clki->clk, clki->max_freq);
 			if (ret) {
diff --git a/drivers/scsi/ufs/ufshcd.h b/drivers/scsi/ufs/ufshcd.h
index 21052040b208..2130856aa8b1 100644
--- a/drivers/scsi/ufs/ufshcd.h
+++ b/drivers/scsi/ufs/ufshcd.h
@@ -770,7 +770,7 @@ void ufshcd_remove(struct ufs_hba *);
 int ufshcd_wait_for_register(struct ufs_hba *hba, u32 reg, u32 mask,
 				u32 val, unsigned long interval_us,
 				unsigned long timeout_ms, bool can_sleep);
-void ufshcd_parse_dev_ref_clk_freq(struct ufs_hba *hba);
+void ufshcd_parse_dev_ref_clk_freq(struct ufs_hba *hba, struct clk *refclk);
 
 static inline void check_upiu_size(void)
 {
-- 
2.23.0.rc1.153.gdeed80330f-goog

