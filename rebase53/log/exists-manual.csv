"Local SHA","Local Subject","Local Patch ID","Upstream SHA","Upstream Subject","Upstream Patch ID",
"6b8fd775a0d3daf41e2bb0aea9a8c0f3ef88d190","FROMLIST: sched: Relocate arch_scale_cpu_capacity","855815b387451d65e9cf4ddbd4d07e10f5adc14b","5bd0988be12733a42a1a3d50e3e2ddfd79e57518","sched/topology: Relocate arch_scale_cpu_capacity() to the internal header","8587eed897e44315591e1c118615b954c02a69db",
"789ef1782d83521074fef5795e8b2b0cc2a1015a","FROMLIST: sched/cpufreq: Prepare schedutil for Energy Aware Scheduling","80e2f469f0044be6eac8839473e64e3bbd8e393f","938e5e4b0d1502a93e787985cb95b136b40717b7","sched/cpufreq: Prepare schedutil for Energy Aware Scheduling","2af84e3a61437926931fe19e9b844cbc4628e8c5",
"6758eb4914188233870eae9bc0e8fd56363ef409","FROMLIST: PM: Introduce an Energy Model management framework","08b0f79bd6aed68aa5b9f7bd25fae8897de2e654","27871f7a8a341ef5c636a337856369acf8013e4e","PM: Introduce an Energy Model management framework","ea55ae92b48ba02cfe9af98e63a7ae052665b518",
"65b391c53f93b74f7708f2ae6191164fac1aff29","FROMLIST: sched/topology: Reference the Energy Model of CPUs when available","39953a1b79fb7113556a5dca1f04b0fc713da3ac","6aa140fa4508933a6ac6717d65a403eb904d6c02","sched/topology: Reference the Energy Model of CPUs when available","16924fcb4c9eab19d4a3a6f99ef6a56eea0af55b",
"97da053c78b68f012c86133bad276f5a9f311e98","FROMLIST: sched/topology: Lowest CPU asymmetry sched_domain level pointer","f49cf4015c5d8faca4c84cb8e9d4aeb8b0c1e94d","011b27bb5d3139e8b5fe9ceff1fc7f6dc3145071","sched/topology: Add lowest CPU asymmetry sched_domain level pointer","f49cf4015c5d8faca4c84cb8e9d4aeb8b0c1e94d",
"8d1fea14be3a2fbedd1c76f12f449123fef7e1c3","FROMLIST: sched/topology: Disable EAS on inappropriate platforms","a69163dee4acdb5bc23517da61456bcc20ee5409","b68a4c0dba3b1e1dda1ede49f3c2fc72d3b54567","sched/topology: Disable EAS on inappropriate platforms","a8e6f9e2a2fcefcbb645a1ad2656aa4877c9d85f",
"996d62ba153adf383c7399e29274388bdc65f973","FROMLIST: sched/fair: Clean-up update_sg_lb_stats parameters","927a0ee55cff9cd3a977cb315c813d234ab3d63f","630246a06ae2a7a12d1fce85f1e5681032982791","sched/fair: Clean-up update_sg_lb_stats parameters","927a0ee55cff9cd3a977cb315c813d234ab3d63f",
"454d381629e07c7de93a96d63bae1290d70455e3","FROMLIST: sched: Add over-utilization/tipping point indicator","d8388c79d51ebfed2bbeb7e0f76c1e5f6b4e5695","2802bf3cd936fe2c8033a696d375a4d9d3974de4","sched/fair: Add over-utilization/tipping point indicator","73a9bb4d5150f655430d52855db9aba313996b81",
"935b5ba7eba175b18bd45757488c30ae53f60de7","FROMLIST: sched/fair: Introduce an energy estimation helper function","8c37eb4f84873b71a62fe40e7f35e45591891289","390031e4c309c94ecc07a558187eb5185200df83","sched/fair: Introduce an energy estimation helper function","df074f97e2e241ebf1c1088a09487d4808817eb7",
"1f1cb4eb202ff86e4928bd662cac144508748ac5","FROMLIST: sched/fair: Select an energy-efficient CPU on task wake-up","4b7211af76ae413e86b82a2c598f5b431d9e2cb8","732cd75b8c920d3727e69957b14faa7c2d7c3b75","sched/fair: Select an energy-efficient CPU on task wake-up","273317a207f9516074100a28b59de58a0a49e9ca",
"b6f7b5c66bf1c8e878bfa41fa80b1925214006ea","FROMLIST: sched/topology: Make Energy Aware Scheduling depend on schedutil","cbffd89bc037e8f65e8363be01c6ff91925660a5","531b5c9f5cd05ead53324f419b32685a22eebe8b","sched/topology: Make Energy Aware Scheduling depend on schedutil","d25ca0eeffc35a0de71baab06ba19d9d92a61cda",
"2c8f7282824bb1663e12414cc657ea3d300e19b9","FROMLIST: arm64: dts: sdm845: Add dispcc node","4ec1f0e10acd59688457bc014be1c895be16e4aa","40019e8452fe76867bdb2e7d5ca9f085fe0cd16b","arm64: dts: sdm845: Add dispcc node","4ec1f0e10acd59688457bc014be1c895be16e4aa",
"743c4a95897da0a4f4f30463a2bfd8eb6d0b84d1","FROMLIST: phy: Update PHY power control sequence","18325e6ac3e5822ceb5ad3958d460dbe6c1503e6","0d58280cf1e61b06cb4d4aab672efccdc28794f6","phy: Update PHY power control sequence","18325e6ac3e5822ceb5ad3958d460dbe6c1503e6",
"5d6bb44f5a826df2c3834f3edffd762dbcb40a44","FROMLIST: phy: General struct and field cleanup","010b93e56f56858fc66cd4cc43f4302c01352676","6b04526812ac41ba82317caa8df3549dda2cab97","phy: General struct and field cleanup","010b93e56f56858fc66cd4cc43f4302c01352676",
"94b5164324bce75402abe0c69c0a9e3a32adcb12","FROMLIST: phy: Add QMP phy based UFS phy support for sdm845","5ae5da1a9be8c82cf49d56991bd74b121e12dada","cc31cdbef9b7166fe42e08267349cfbaa32696b6","phy: Add QMP phy based UFS phy support for sdm845","5ae5da1a9be8c82cf49d56991bd74b121e12dada",
"99df7dbbaef3b683499924dab8d56c5e021ef4b9","FROMLIST: dt-bindings: phy-qcom-qmp: Add UFS phy compatible string for sdm845","66ee9602559630201c3ef2eba23c290eee38b3f3","99c7c7364b714e1de54a25c3642d991de1675e27","dt-bindings: phy-qcom-qmp: Add UFS phy compatible string for sdm845","5e28dd0b8e7a1b13187662550b69958f7ba67a5f",
"9d68a6ff4c80823eec4a7365a0c657f81bd125f2","BACKPORT: FROMLIST: arm64: dts: qcom: sdm845: Add USB-related nodes","8aa2244eff88fa0584155c50d96aa2b74f51b8d3","ca4db2b538a17aaf46ed968815cda50da2ca34a5","arm64: dts: qcom: sdm845: Add USB-related nodes","c0844c617b4b7d6b740bb0ab37f4f88a702f88b9",
"9f34ca2c7bcf381efb6f3e1a876dedf95f9b68ed","BACKPORT: FROMLIST: virtio_blk: add discard and write zeroes support","f93205fdd90ec46dabca8b59d402db7a416777c7","1f23816b8eb8fdc39990abe166c10a18c16f6b21","virtio_blk: add discard and write zeroes support","b0aee5ceb0d4673397167f2f3d22fa3e2cfcab52",
"b4e76934402f68f186636a2114627bb9f9883d9e","FROMLIST: drivers: soc: Add broadcast base for Last Level Cache Controller (LLCC)","349cac18c6b0d9fb7b279c0d43fc164c23678a6a","7f9c136216c745099f36a4e0c3b2e63eedeb442f","soc: qcom: Add broadcast base for Last Level Cache Controller (LLCC)","349cac18c6b0d9fb7b279c0d43fc164c23678a6a",
"164715ae41c17e614f1dbcec2fa2ef4795fa0e34","FROMLIST: drivers: soc: Add support to register LLCC EDAC driver","d818b6122bd413bffe2786700c51ecab2180b9b6","c081f3060fab316fcf103967a24e502d58488849","soc: qcom: Add support to register LLCC EDAC driver","d818b6122bd413bffe2786700c51ecab2180b9b6",
"b8c3fcc2775a0ec658d35367f6480a211058ba43","FROMLIST: drivers: edac: Add EDAC driver support for QCOM SoCs","49cd458b5308b143f97cdceb181c00ac7835c45a","27450653f1db0b9d5b5048a246c850c52ee4aa61","drivers: edac: Add EDAC driver support for QCOM SoCs","f07a7330956ee9dc123b373b3d73d227b9a13b62",
"e17dbf481badf891ca3fc31d1b61818260b6c39b","FROMLIST: arm64: dts: qcom: pm8998: Add adc node","d5d699398f7eacc70b4c5b10b4b5e0ef6db71411","43fb4431684067ca5547aa08b9c62db2fb024f53","arm64: dts: qcom: pm8998: Add adc node","d5d699398f7eacc70b4c5b10b4b5e0ef6db71411",
"4e19095cae8cb64fa86f4db96832626ebdf6c028","FROMLIST: arm64: dts: qcom: Populate pm8998 with some nodes","9474a50bb697f8dfbe0e7053505ed3e85b0bbc4e","61020aa53cc16a8edeaf9c45b896fab20ebda28a","arm64: dts: qcom: Populate pm8998 with additional nodes","9474a50bb697f8dfbe0e7053505ed3e85b0bbc4e",
"ea9e56c6b77680c60957eee57ba0e73363903da5","FROMLIST: arm64: dts: qcom: Add AOSS reset driver node for SDM845","eb3222225bdcf03e787d9fac9975c602bfd4f9f6","ead5eea3e3a924cccfb6bcb7841629eb044d0bd8","arm64: dts: qcom: Add AOSS reset driver node for SDM845","2fba87c805009be48f3637579c545e174ccc3fab",
"41b6a7725b69c2f9fc7738b31777b9cdd11496e7","FROMLIST: arm64: dts: qcom: sdm845-mtp: Add RPMh VRM/XOB regulators","d283e6383a14267e745e45551308ef1df8381253","d6c40ccf0531938db39ba0fdb28e338bd0da3ed4","arm64: dts: qcom: sdm845-mtp: Add RPMh VRM/XOB regulators","d283e6383a14267e745e45551308ef1df8381253",
"fbca279906ef8942a40e92a1b9c9ab9c266326f6","FROMLIST: arm64: dts: qcom: sdm845-mtp: Add nodes for USB","228fc10599ffa721efdfdca1d296988f10f19793","cfe10d38aa1ae6aaa8979f3eb3695db57863ccd9","arm64: dts: qcom: sdm845-mtp: Add nodes for USB","228fc10599ffa721efdfdca1d296988f10f19793",
"1afa2383c4c9c239c949da018b2c89fafc542ccf","FROMLIST: arm64: dts: qcom: pm8998: Add spmi-temp-alarm node","9c368462ebe7931d92942b77bda68755dc0da5d1","104e6415bf5000ed37ed2765ff0c1619b426d84b","arm64: dts: qcom: pm8998: Add spmi-temp-alarm node","9c368462ebe7931d92942b77bda68755dc0da5d1",
"29b66344a0e6d794f57e1424cd7072b45286ed02","FROMLIST: spi: spi-geni-qcom: Add SPI driver support for GENI based QUP","adf9ad54c17ab09e07938e70d4d25a9739dc63fc","561de45f72bd5f9b3f166bdd6151d4d0fe9e6534","spi: spi-geni-qcom: Add SPI driver support for GENI based QUP","c53c67df9111c4558033a56649bbf5064855e7e5",
"6af66bea90f703db963da00384d91a7732129dad","FROMLIST: spi: Introduce new driver for Qualcomm QuadSPI controller","2fe01845caa5ba746a65d7a0ad15601b87cdacb8","04000dc6f7e3ce24677f2895ea41746ed29a4498","spi: Introduce new driver for Qualcomm QuadSPI controller","6de8525b5e6e53c3d8d0e5e8659a99e73b0c8dc7",
"2d7630df8c4d1f1454bc8d9f464ddd253c8979ba","FROMLIST: arm64: dts: qcom: sdm845: Add qspi (quad SPI) node","170549a922bd56232e4f60f1b7d84786594f7dab","e1ce853932b771a8a524f214b036941d9832e7c7","arm64: dts: qcom: sdm845: Add qspi (quad SPI) node","8569727d40ec2caefd0981cf7f8d3129e9465b22",
"943a4a64f48f170ee639858568833848fe91f4b5","FROMLIST: dt-bindings: soc: qcom: Remove SPI controller maximum frequency binding","f1204d0a13f89b4c89fb34b518f12ec71c1be8c6","a8a398b833f33a1efb8352fcd9f03a354fb387d9","dt-bindings: soc: qcom: Remove SPI controller maximum frequency binding","f1204d0a13f89b4c89fb34b518f12ec71c1be8c6",
"34781ac850a53a49539ba35abedaa499032eb676","FROMLIST: arm64: dts: qcom: sdm845: Add UART nodes","14114183ce3278af44f1161d2ad0649f673c863a","bb2203d5f10bb8b2da16db1a1f357ff1178a5b9f","arm64: dts: qcom: sdm845: Add UART nodes","51ea63115ea1396100a5d3bc2c37138770b5aec3",
"7082ea51dfa17f038d316c997bedb87b05858e12","FROMLIST: drm/msm: Remove pm_runtime operations from msm_iommu","46903724c4e009072b1b688be86b7013e8a7efc7","a6bb79ab48796a6293b9c60597b631bca6011041","drm/msm: Remove pm_runtime calls from msm_iommu.c","030742221b69f44e656a9a585b6b59371da754eb",
"cf3eec27bede4b821e59e9c9331de3a5f0e0fc3f","FROMLIST: mfd: cros_ec_dev: Register cros_ec_accel_legacy driver as a subdevice.","580777941dd7f857e73edc32ae5f1f639e61fedc","ecc2ca47f3cd5b5851496d8261b1b14463d4a726","mfd: cros_ec_dev: Register cros_ec_accel_legacy driver as a subdevice","65bb5454cd1b39b9af2927b6de0277da3ededc87",
"ac69bc74240c2980d1c132c620e4bc797aa7d39a","FROMLIST: PCI: pciehp: Optimize PCIe root resume time","70c133d0aaf9f5814e0d70bf24f16bf070efe182","b3c004542229099e18198061c737e13eafc8d4d6","PCI: pciehp: wait 100 ms after Link Training check","79091824a04620251fd8a3c76e74293f0e75fdfe",
"892b4e3b39771465c3f24476b090db9df5c1d83e","FROMLIST: scsi: ufs: set the device reference clock setting","94f79f65abfc498f011e3a11cdff2d24ae6682db","9e1e8a75708031937a0f92567c19760c92658410","scsi: ufs: set the device reference clock setting","ca1119df42b4d468616b94893b6475cee6022133",
"3f47d42207351450abbd0f2b10977d464cfe17e2","FROMLIST: scsi: ufs: make UFS Tx lane1 clock optional for QCOM platforms","350b0a569ade3b4a0f426b22e38fff3b101d78a0","5adaf1e8d5e56cd7c06f0e4fa0c6b5148220e6ad","scsi: ufs: make UFS Tx lane1 clock optional for QCOM platforms","f03c5432f550eef5e3ac736f93af794b6709991f",
"0190f8fe5bf68c56e53654614265dc4a43efb3f4","BACKPORT: tpm: Add explicit chip->ops locking for sysfs attributes.","8d9cb407f4eabb496649739a2e6397052376ad9c","2677ca98ae377517930c183248221f69f771c921","tpm: use tpm_try_get_ops() in tpm-sysfs.c.","d627561488711da31dfa1d093810eb2a4a8c3a2a",
"58829be84a53911e061a9e69a853be6e5fbaad27","FROMLIST: ath10k: Add support to create boardname for non-bmi target","e42144ece7cb304df579d1ae703a9311ca09ac06","22e8a46027387b4e8db75f73ede9bbf337115e9c","ath10k: add support to create boardname for non-bmi target","0e3fcb1409c7a70f76cb44fe3fc8912d0c3dfc5f",
"9e444e4e938244a0d81da26ff4dfd56927624e3e","FROMLIST: ath10k: Add QMI message handshake for wcn3990 client","de821c4f37ec6f53655eb9157d228049dfe8e92e","ba94c753ccb471bafe8bd824b744fda6fee0001e","ath10k: add QMI message handshake for wcn3990 client","5a10cc96da7f219b0078482aea64740a4974d82f",
"e25f7a3fde49aafcb866c2789a6114cef966d8f5","FROMLIST: ath10k: Set DMA address mask to 35 bit for WCN3990","4550c43f699cadcf960431de00173ebb51e2b248","5b9030cee1bedba934adb5c7ae708e510dddd0f0","ath10k: Set DMA address mask to 35 bit for WCN3990","4550c43f699cadcf960431de00173ebb51e2b248",
"87bc14d8d9f5f78df59bbde8d4ae7663041db07c","FROMLIST: dt-bindings: phy-qcom-qmp: Fix register underspecification","d1968bd09be553778e03594735b63d3d4287c47f","2517d09b39f3bb811e7349efa8248147ccb2eaa1","dt-bindings: phy-qcom-qmp: Fix register underspecification","82fd3ffefff2d1c3246dcf2ee087fcf9b3b55272",
"df93117e3abb977634c0b053cc8a19b4bc9ba3d0","FROMLIST: arm64: dts: qcom: sdm845: add UFS controller","ab269c7e5c8bffeede19c29a12db9ada9fcf8584","cc16687fbd740431d9f9ebbfb64ace51676b9d3b","arm64: dts: qcom: sdm845: add UFS controller","f3e368ee8c3b14182f8c1f95bc6a0f806e1e2cc8",
"121a1d526d7406993a37ac9c435b1eded758f882","FROMLIST: arm64: dts: qcom: sdm845: Add UFS nodes for sdm845-mtp","2db772fc972b17d89186bc485b9be4c4e657ca72","b010fdb4ea58fb1a0c59c550ef5692745b1e4dc2","arm64: dts: qcom: sdm845: Add UFS nodes for sdm845-mtp","92a877c8b46710fc2510c6370654b0499ac9411a",
"64fe4c35c9161a0666855f87565467b78dc224da","FROMLIST: ath10k: snoc: remove 'wcn3990' from generic resource handling","0f8a97da2b42066b94e57973f86cea4ae0e26b47","887a3dcf589389756bad51b34b69d4e9e9b2aa86","ath10k: snoc: remove 'wcn3990' from generic resource handling","04f46b46e7bd937d5a1a1de944e2a0c0d1f6f782",
"a0069d4ff25ca6bb7c93c4e3ffabb1aee7188605","FROMGIT: kdb: use correct pointer when 'btc' calls 'btt'","ee0cbaf22e2d72aa1b6a014491ddb8c20f5594d7","47052af2372038e6d05672c37d2831318c96c4be","kdb: use correct pointer when 'btc' calls 'btt'","ee0cbaf22e2d72aa1b6a014491ddb8c20f5594d7",
"15b87b9da9aa624f00828915e5c10122622cd43d","FROMLIST: arm64: dts: qcom: sdm845: Add PDC Global reset driver node","2c115fc0d78305e31b70ceb51a62b10d35e025a2","13393da0c698b43b0e8bd710060b99da59727150","arm64: dts: qcom: sdm845: Add PDC Global reset driver node","de20c8430e7fc59bc3e5c40a8eac62d311f29a4a",
"8488148153f842cf027cd9bd15cdd6c0ff895789","FROMLIST: arm64: dts: qcom: sdm845: Add reserve-memory nodes","f9a4460926436f80b8478cd3109c953e7db3cf03","8ed6d484ec76c8c77ef9deca3875de50d83c7221","arm64: dts: qcom: sdm845: Add reserve-memory nodes","e3af76693f71d4225ddd5669514e2808eb926168",
"0400d4b09e7c9290dbbfd95943da466a6e171c35","BACKPORT: drm/i915/icl: toggle PHY clock gating around link training","35d0bf47587318ddba86ceafe897fa719a387e55","bc334d914eeee02eddefd7be533acafd9a042ade","drm/i915/icl: toggle PHY clock gating around link training","72caf336a230d464d1feea160231a4bfaa576521",
"8904e6bcca0dda56f9726a840b069b7ec217a3ce","BACKPORT: drm/i915: remove confusing GPIO vs PCH_GPIO","6ef256724d1ac3dc9602e6bb6392a8b3daaf89bc","dce888798d3ed1c7fea2d45f5f757a749a9e2584","drm/i915: remove confusing GPIO vs PCH_GPIO","f379245fc999ca73aed85c577e9c10a8369c3383",
"5d0b7c73af7b94c0d7172909885fb15d98c94125","BACKPORT: drm/i915/icl: implement the tc/legacy HPD {dis,}connect flows","46ce9a9fec2e0e9523fe067bc1decc59ba980c64","39d1e234e1e13f65f4d53715d34aadfb6249eeaf","drm/i915/icl: implement the tc/legacy HPD {dis,}connect flows","d64d8f69eb80a7e6aa6c86a25cba7758addf3b24",
"2b5ead93e6f2c047741683eeb1e45e2bbd5fa426","BACKPORT: drm/i915: Attach the pci match data to the device upon creation","ae01f40702f2a6fa2261dd909e890de63b9369c6","55ac5a1614f99816ed367a9ded5f5d65321b522f","drm/i915: Attach the pci match data to the device upon creation","0c94a5a17ff4df4c94517f8e6675cce8ffb48bd9",
"240da81570b7d7b2f0337a1648624620c07991ef","BACKPORT: FROMLIST: dt: bindings: add missing dt properties for WCN3990 wifi node","6d9bb055408f4fa865a2e6612a66268449c6d205","5fac78aac91d89b4a04c1cbd92254f62935c2711","dt: bindings: ath10k: add missing dt properties for WCN3990 wifi node","0125d806fb0278ede73a83a2aef7bf58b188adfa",
"1b2927cd36db882de27d7b84c3636c4ffe988f33","FROMLIST: dts: arm64/sdm845: Add WCN3990 WLAN module device node","9128702087872e83535cab298e6c521229952144","022bccb840b7ff9c64a70e81ac017d4d10bb8a9c","arm64: dts: sdm845: Add WCN3990 WLAN module device node","79a046f21ffd5222d826097fb6f7e72c8a7e4216",
"2b668d3fd0fb7e3f554d75d2252cd6c402e0df48","BACKPORT: FROMLIST: dt: bindings: add bindings for wifi iommu node","a991a53510da3daee03741533c7489945ded18b9","a3542d0c73cec6a45bde512ea2b43666c05a8c54","dt: bindings: ath10k: add bindings for wifi iommu node","65c741435c83afa240e51ceda99c343300e8dd19",
"5dcbea93dd1ae10a8b4db2f4021fb9ea73d144d4","BACKPORT: drm/amd/display: Refactor FreeSync module","70612ef66db480177ef606c51a41edf419a7fca9","98e6436d3af5fef7ca9b59d865dd5807ede36fb9","drm/amd/display: Refactor FreeSync module","23a7d29b34c4bc76abb8042c3d5a0a52f97615fa",
"c74eb36aa023ddb7752854838cf50b37830b577b","BACKPORT: drm/vmwgfx: Adapt execbuf to the new validation api","0edd4fe1291c21a23e7e7af1851139cb9ff64695","9c079b8ce8bf8e0394149eb39c78b04285644bcc","drm/vmwgfx: Adapt execbuf to the new validation api","d1e4bae6b2cfedb0c466ca9596c8eb0bd44a705f",
"c58618019deb3ccb41fe793152c1955558b50d03","FROMLIST: blk-mq: not embed .mq_kobj and ctx->kobj into queue instance","1c959d68cd5a2e66b379e76f316b5fe0d8d6bc72","1db4909e76f64a85f4aaa187f0f683f5c85a471d","blk-mq: not embed .mq_kobj and ctx->kobj into queue instance","5516ea1802e7f5dcd176149890961728af8b0393",
"54b05ab018581178978268c316bd3ed662fca3c5","FROMGIT: drm: msm: Use DRM_DEV_* instead of dev_*","82e97ea1cc1af55583b131a2e4eea7d6ac5a86b9","6a41da17e87dee2936645d9a51fccf932fa42981","drm: msm: Use DRM_DEV_* instead of dev_*","b04cdc5b271845c04c14197ad0975c8292b88cba",
"8412b18b1ba1f324b7175b5aba38f43456c5d7dc","FROMLIST: pinctrl: msm: Add sleep pinctrl state transitions","7d7dff31a3fd10c229b9afa8349d653c9e33472f","977d057ad3464c4698fd875ca6bf3f30e554cee2","pinctrl: msm: Add sleep pinctrl state transitions","6276feee77a331deff4ffb02c624d575bb9374fd",
"ae682cde4eb53689418f9f102ba0f81729b62f26","FROMLIST: arm64: dts: sdm845: Add gpu clock controller node","ca79084d00b0be30f5913bf3ef3b42921694026e","9aa4a27ec6b0cd7292dd8452dd386c6d0d5a4a18","arm64: dts: sdm845: Add gpu clock controller node","2cd0c684a89326855466584cc67d37bab8db7807",
"da4c1b2d9f5ee9526fd3d25fdc10b9520808e593","BACKPORT: FROMLIST: interconnect: Add generic on-chip interconnect API","44b27e85f12bd6244d6d174570d768f7501c7946","11f1ceca7031deefc1a34236ab7b94360016b71d","interconnect: Add generic on-chip interconnect API","1f68d5376bc2b860789c7c495e3e53973cc29ac5",
"b4a8bc6ba2bebd049df0a4036ecba20cb595f71f","FROMLIST: dt-bindings: Introduce interconnect binding","8cd20d268179c105f125b392fd25567ab3ac3adb","06b3773b5038a618c578f823d5622481e96c0b56","dt-bindings: Introduce interconnect binding","bc0cd3dd8152b5a5c2e7da884698978a633f0dc4",
"610e114842d13d4d4c1d28e3d92020521f6a8cf5","FROMLIST: interconnect: Allow endpoints translation via DT","24f1e20b65da8a68e38c8a12a17f409e0b8ca8ee","87e3031b6fbd83ea83adf1bf9602bcce313ee787","interconnect: Allow endpoints translation via DT","b1d08740ad8652efd73649810e996a7da908cad7",
"9a295683ef3b013ebccb73132b1edb9a6d04a287","FROMLIST: interconnect: Add debugfs support","67cca774d0a0e258364228e3ef9e6002a6d48f63","3697ff4340ba636f5ec75096713372973719a0f2","interconnect: Add debugfs support","79935721a48a416dc6d727b2f0017958593b29a7",
"b2c182b7c4661b5b3b88f4cdaa9f87463b6ab052","FROMLIST: interconnect: qcom: Add sdm845 interconnect provider driver","245fd56cf5d4cbb17de533b9550d8c43c43f8458","b5d2f741077abc71205e60b5bbd7dfa07b9d6953","interconnect: qcom: Add sdm845 interconnect provider driver","edea8144efaf7c1a97b43e52e1f656169efe1784",
"0208796b9ce9d8800ccc28fd5d059f6b6c71e0de","FROMLIST: arm64: dts: sdm845: Add interconnect provider DT nodes","f5d0767bf4fa5538dd87d38af448b5f86e7c1914","5e8204893f62792ebeed88ae505cf658b216eaa0","arm64: dts: sdm845: Add interconnect provider DT nodes","0905f2aa7436712a6001b9d7372a55bf813a900a",
"3c111af9437ad21d7db82120a116936bc968cab9","FROMLIST: arm64: dts: qcom: sdm845: Add dpu to sdm845 dts file","a50e9686d3abfe9a50bf58c587b1fa1351f83a2b","08c2a076d18f3e481c004f59a9c4c9f07eec01db","arm64: dts: qcom: sdm845: Add dpu to sdm845 dts file","4c0d757dffd2bc01334d00141a82e7d049aababd",
"81534abc1d84ca7b3c63ba03f98bb6c103bb1ab5","FROMLIST: arm64: dts: sdm845: Add videocc node","8ae246924908ee79297e68f0b4b957e22591390d","05556681948be46422618e662edd69d719f6b109","arm64: dts: sdm845: Add videocc node","8b30bc4dc9095562eaf14ebdeff3a3816e911d07",
"48c0c22eef630edb010af82112f0b5d6db800357","FROMLIST: arm64: dts: qcom: sdm845: Add SD node","0485b223bdd7cbf6e1699a824f817d6e42efc3b7","67d62e5a3b55d470101eff378f5cb7437de0f26a","arm64: dts: qcom: sdm845: Add SD node","ba1ababac7ea7ebe415bcc580df9a8748fe24437",
"0b08eb5c0406c2da97f1607303072de50c25d19c","BACKPORT: FROMLIST: arm64: dts: sdm845: Add lpasscc node","752bb81025cd795738903d44f4d144b5c6ed018d","0cef5dd4035fb856a0b4676283d90f093ecd0148","arm64: dts: sdm845: Add lpasscc node","b538eb17c11c5a2c3bf4f9e8383d52cc99e4b466",
"3356a4b12f2d4992d3a44798ac165be95ffa47cb","FROMLIST: drm/amd/display: fix compliler errors [-Werror,-Wmissing-braces]","becb716ac7dc4148c736d3c9eba8b247dba0954a","785fd44c251c08c1490e20daec604f0f924dd7fc","drm/amd/display: fix compliler errors [-Werror,-Wmissing-braces]","2d4f0abd69c199570608864351aa296bff8c93dc",
"b4240c52ff8b1ca1d2522a651abfc8cce4ab9082","FROMLIST: arm64: dts: sdm845: Add cpufreq device node","0da264fd8f8f756b2cb8e6d8e01a06087ad7deb2","c604b82a09ce3244add85064f8538d45f879a980","arm64: dts: sdm845: Add cpufreq device node","bb2664eaa3758cfacaa679c39ef06ccc0ccbdbb2",
"c8ca44178623e3d49a30b3d30d54690135a4c58d","FROMGIT: dt-bindings: drm/msm/a6xx: Document GMU and update GPU bindings","be1415a2ed8abb2d5302e2a56cfcaa7d0794190b","740f9433a85408039aac33eb7f62a6a8d552d983","dt-bindings: drm/msm/a6xx: Document GMU and update GPU bindings","f10349207fd3fb7d54396787ae88ddeef700bfb6",
"60acd33f01669f10bdd603c2f0a51d4d4fad70c8","FROMLIST: soc: qcom: rpmhpd: Add RPMh power domain driver","0e71ce6118c75a1a8f8fa177639afe22e3c053a4","279b7e8a62cc4f524dac49ac3ab5bc401a965422","soc: qcom: rpmhpd: Add RPMh power domain driver","393d18c0243d3c408c41360bdb6b460f09927598",
"7a3fe2785c28d803c3ed43ea41c9dd44c5d4bb57","BACKPORT: FROMLIST: arm64: dts: sdm845: Add rpmh powercontroller node","061cb53c46865aacf45c3c163d2c0303f6af9e64","5b6f186f0abb7e6c0db4ab3a5eb2831412d03673","arm64: dts: sdm845: Add rpmh powercontroller node","96db93a10e6ff4d564ff8669f4adc31726465c95",
"f1601f07ee03f6f0e0072b6d254922eb60b2e38d","BACKPORT: FROMLIST: arm64: dts: qcom: sdm845: Increase address and size cells for soc","35cd2584e94bf1ab3932ea09efe143af05cda8a6","bede7d2dc8f36cc88212ae8d1e849fc7203cf2fe","arm64: dts: qcom: sdm845: Increase address and size cells for soc","aa07f02fcdb62db479296597fbfec44ee54b28ab",
"758dc382f136b3ae3521a897661c9bde22ddf60e","FROMLIST: arm64: dts: sdm845: Add CPU capacity values","42c76c355f542cb815019da3f7b4f9e3b9f0386e","b6bc6423fa1a2b1cdf407c22bf1a1bfff73d57bd","arm64: dts: sdm845: Add CPU capacity values","6d738b605c89f5e08f10b12580b8ff34281f4223",
"b205ba4d97cf0bc140866c368e9610d30053405f","FROMLIST: drm/msm/a6xx: Add support for an interconnect path","d912a60da9e68152dc87a7718ae003787706b124","fcf9d0b7d2f50003efe0ba280be458f27671010d","drm/msm/a6xx: Add support for an interconnect path","07caecb022f49d7b3e3c9fb363f70d1398f76534",
"45fd4273d8b73d265a5526f6ce7055c4037ad12a","FROMLIST: dt-bindings: drm/msm/a6xx: Document interconnect properties for GPU","7fb3d3b1cfa3347599f05f75b1e28af14c017a10","026ef6354caa661ddd4c399590048e72a9d420bf","dt-bindings: drm/msm/a6xx: Document interconnect properties for GPU","7acbb2dd83607264e9e77c1544e071ae0ed72675",
"eeafc37c48477197406629173446b72bc325389a","BACKPORT: FROMLIST: arm64: dts: sdm845: Add gpu and gmu device nodes","454f91c0f6c4088e20557f5c20cc5c18fc66a131","c79800103eb187526087bca6009727b476a384c0","arm64: dts: sdm845: Add gpu and gmu device nodes","1b6a85c17967030b4de8e9bab7f6df56c4b11fd4",
"0546c1f485a5314bdb31d247a96f9d73ab24fd21","FROMLIST: drm/msm/dpu: clean up references of DPU custom bus scaling","5e2aab963b2316221a5c4c899a9e2fd11ec68189","cb88482e2570f67a6f4e72569e5a18329d5536ab","drm/msm/dpu: clean up references of DPU custom bus scaling","84c95949d9799f2c671f4e69be7cecf568752139",
"1c65bbb51db9331cfba4280b05e50113356bef32","FROMLIST: drm/msm/dpu: Integrate interconnect API in MDSS","e8c665a1534d1dbb9498b9f318fa90e1bc14f7fa","20cad6cd14f4ec5dd4e530ac2b8013d0bed75264","drm/msm/dpu: Integrate interconnect API in MDSS","b9431d1b4da1360ccc8a215b627d7bc1284a0ab3",
"584b9900d98e9492c23a0af59d350b40095df922","FROMLIST: uvc: Avoid NULL pointer dereference at the end of streaming","1e8cfef1441414fabde3de299e80c41df045f369","9dd0627d8d62a7ddb001a75f63942d92b5336561","media: uvcvideo: Avoid NULL pointer dereference at the end of streaming","0f8b81f3c7159620c880c1e34042de3ca77b32f5",
"15b95780aadc1805280def3d0ee7bd6308dfbb2d","FROMLIST: wilco_ec: Add new driver for Wilco EC","34de0c8d48ede3aa9baabbdeece7d99206aa0e09","7b3d4f44abf0e7a1ba762c8a9c99a8b39ee0c8b1","platform/chrome: Add new driver for Wilco EC","e1979201ba75b05c403720cf02485bbf7326cb82",
"eb81c255938faee173dce4eccd1dbbbc6bbd1041","FROMLIST: arm64: dts: sdm845: wireup the thermal trip points to cpufreq","5d05ebc2191d68816733b0d74751bacfff91c64a","c47fc19887ce7f7797bd78727ba4ff55130876e5","arm64: dts: sdm845: wireup the thermal trip points to cpufreq","f4664047ec92587b557bc120aff41ca1be932dc3",
"ba1fedcf1f81f269892e89f2f78d74af444ba368","FROMGIT: thermal: mtk: Allocate enough space for mtk_thermal.","e1c01b6938a61c0c22ae385d6b2b0c4bb63d7649","fb4d83f293e072ad96848959d20664e2a9f2235b","thermal: mtk: Allocate enough space for mtk_thermal.","bc098ca997ac9155183309a2fca48e7fff315aa5",
"cf8a809363c0a92877bac7184149beed96f20b72","FROMLIST: wilco_ec: Fix Kconfig dependencies","2be7b119b8bf60aaf75de8da8a425d4729694a12","7b3d4f44abf0e7a1ba762c8a9c99a8b39ee0c8b1","platform/chrome: Add new driver for Wilco EC","e1979201ba75b05c403720cf02485bbf7326cb82",
"f34acfb57c992777f8d73da998d0990e6489936f","FROMLIST: wilco_ec: Fix wilco_ec core driver.","8a6ac81831779bcf1206f3def15f8aca47bd60f3","7b3d4f44abf0e7a1ba762c8a9c99a8b39ee0c8b1","platform/chrome: Add new driver for Wilco EC","e1979201ba75b05c403720cf02485bbf7326cb82",
"117929663c367332d1ea3dca2d9c353f79373513","FROMLIST: wilco_ec: Add support for raw commands in debugfs","f47496912a80db10b637624a04e9cf7c8d5bc366","b787bb126cbcd73754bcbc055ae9f804ac576e4a","platform/chrome: wilco_ec: Add support for raw commands in debugfs","c9d22ea4f99bf388340d4d7482cb74b62cbb0c78",
"6448fd21910ef6725aae096b24c65c2e3ab7f918","FROMLIST: wilco_ec: Add RTC driver","ab8d9b3bbc6bfb8e50f7021c71eef9a574954dfa","0d2f2a3da1f2a9ebeb66bb03073dd149fccf1bdd","platform/chrome: wilco_ec: Add RTC driver","9998159b39a6f90213e7767ea95e33bac1f1dc82",
"70271c03844fd3adb3bfe5ea6d8976e54df2c18c","FROMLIST: of: fix kmemleak crash caused by imbalance in early memory reservation","4324953ec56ca9d9965c15271478476fc5a5a41b","5c01a25a210366362a40dc63f550e72688a60c48","of: fix kmemleak crash caused by imbalance in early memory reservation","2aacd0e9c3c7ccd28b7206eea63c935b81f0a278",
"10b56ce292f5cfdfb6f32fda1d8cb6d341d58274","FROMLIST: of: fix parameters order for call to memblock_find_in_range()","fc0d43ae619e43d74a7a63c6273e14a5faa438ae","5c01a25a210366362a40dc63f550e72688a60c48","of: fix kmemleak crash caused by imbalance in early memory reservation","2aacd0e9c3c7ccd28b7206eea63c935b81f0a278",
"00018db4291fbef08630810fdd64f797ad4f9533","FROMLIST: iommu/mediatek: Switch to SPDX license identifier","bd5d36590886ed3da9e93ea97850a95b75b522ea","1802d0beecafe581ad584634ba92f8a471d8a63a","treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 174","aba2784339db09eddad8a3b47abd88c9636c9a72",
"e34b02b02fbb0f90b21313027b5991fbd69a593c","FROMLIST: mfd: cros_ec: instantiate properly CrOS ISH MCU device","b31405d8c5e1c7b6c4aa1ca792a4505064f8fa8d","d4cee9509e508df34d1dbfad6b42e5bf907d20fd","mfd: cros_ec: Instantiate properly CrOS ISH MCU device","406c6c62fa4590596ca0566dfb71bc7dcff0b692",
"3dbfb034158967cf43fc2cf7cfbe5a74c8cd75c4","FROMLIST: arm64: dts: Add Mediatek SoC MT8183 and evaluation board dts and Makefile","1bc91cec7682505ad9338cdf1f82f091884f62ae","e526c9bc11f858f115c77ca7f0b0256f09668f96","arm64: dts: Add Mediatek SoC MT8183 and evaluation board dts and Makefile","bf28f8bd75ae6ab9f2566ab36e24d5cc105113cf",
"ade20e3b572d5a94eead1407f68d031bc41d1cf2","FROMLIST: clk: mediatek: Add new clkmux register API","7a79ebe6f3a0d6775c78fb05833e2587c3b386ce","a3ae549917f1634f85c62984617521801505eb1e","clk: mediatek: Add new clkmux register API","c65a1663f0340e322797b71b441d8c62f8fc1555",
"4a25e1d58c3b9237e690b76101d6b45b16e4cd7b","BACKPORT: FROMLIST: Revert ""kbuild: use -Oz instead of -Os when using clang""","7058cce0fd4d6ab59cccb2121419501ddd9cc2d1","a75bb4eb9e565b9f5115e2e8c07377ce32cbe69a","Revert ""kbuild: use -Oz instead of -Os when using clang""","45b738f9ff7049aad974612f89cc2603c3ee9c35",
"bf135b596cafb90ec9173648fcce80def404406d","FROMGIT: mfd: mt6397: Don't call irq_dispose_mapping.","602278d0cf17b923a887f8cf65a7603816927d68","24db953e942bd7a983e97892bdaddf69d00b1199","rtc: mt6397: Don't call irq_dispose_mapping.","440b1a9865912dc50d0ed98924ae68740ea9b7f7",
"82f950f4663da84d727c4bac79148d17ebae5c70","FROMLIST: drivers/acpi: Clear status of an event before enabling it","8b676408c2529abceb1459d770f4b20b94db3072","ed52b07bd698513edb66704aa09caa4d737348c1","ACPICA: Clear status of GPEs before enabling them","d420f082945147608f5afdc9bc379afe3a530af3",
"156cf99d1e059f5631393468cdba83f7b402774c","FROMLIST: drm/mediatek: add vmap support for mediatek drm","72b441098dbe8e90d808618f7c76a3998bdca912","3df64d7b0a4f70f1797f23cfd4cca5c4d48131fe","drm/mediatek: Implement gem prime vmap/vunmap function","96c0038e7cc96f8d75c487b1a11c6a2aa6265567",
"251b21ddeaecd46dae2a37eb2f650fc19bb658ac","FROMLIST: arm64: dts: mt8183: add spi node","5bb21f8ac33a3925a88c8954caa1440e4787d996","8e2dd0f9249119e0084de4b75855359efe3fb5cc","arm64: dts: mt8183: add spi node","9d39eec6809c4105b959456406a2f58e4fc2ae5d",
"35665c342634d27827f489da0fae22a101ddc322","FROMLIST: mfd: cros_ec: Add host_sleep_event_v1 command","97969719353bf7e32c52c45f3b0d14d1a2e22428","afe2bb5c4b6227a347be60c70df2890c3f57553d","mfd: cros_ec: Add host_sleep_event_v1 command","f478f8dc686d1f22527b5ddd44968fb4ebf0a6fd",
"dece8cfd376cf70ea278bf056c7da69f14ec255c","FROMLIST: platform: chrome: Add ChromeOS EC ISHTP driver","0d1df8315bd44e24252dcc8e0d681df3a8ad57c2","26a14267aff218c60b89007fdb44ca392ba6122c","platform/chrome: Add ChromeOS EC ISHTP driver","b08edf0e7bfbca83185407bb6951ac1d421f549e",
"94fbcafa176539c820d147e1b06d4cb42305260f","FROMLIST: mfd: cros_ec: check for NULL transfer function","4261b2abe81fab774c04119e122677a33ef02e92","94d4e7af14a1170e34cf082d92e4c02de9e9fb88","platform/chrome: cros_ec_proto: check for NULL transfer function","cf05ec43c4f11d5ec5b8dcf24e4e331c1009be9f",
"cb0dfff25530f5f392640e9aa8dcc94ed6fd51ba","FROMGIT: platform/chrome: wilco_ec: Standardize mailbox interface","e2e6f8692cdef30ea9aec8e03ae4c9a434e407af","14e14aaf61321ba30d0bbdf4c4668f260ca1141c","platform/chrome: wilco_ec: Standardize mailbox interface","f3e4a9f82b48f3f388829482375521ab069277db",
"3feadc3134036df8e5d1804b2ca9b83eb063265d","BACKPORT: FROMLIST: platform/chrome: Add support for v1 of host sleep event","af765915bc82432b09fdbfd990c30be18f5df98e","7235560ac77a2516b84b86946debaa4fb951ed9b","platform/chrome: Add support for v1 of host sleep event","b18a0600d90139918dd5fedd00c1252cb2e63366",
"d5a18bab0a66abf803a9a99905aa6e0cdab4a0ab","FROMLIST: wilco_ec: Add Boot on AC support","7b20892cf928168b2d35a25b19f3a7d74741d18b","4c1ca625c622b7a9f04c2949fd1ffdc6effa86de","platform/chrome: wilco_ec: Add Boot on AC support","8ecc38580ecdfa146ab5a014c130d0e99b6ffecc",
"596ff82b1994f24e7d331f0bd8efae71d34f9340","FROMLIST: mfd: intel-lpss: Add Intel Comet Lake PCI IDs","49d10030c368766026c6ebdb9fe3ffc4800ebcb4","dd6629073a97e5ee125eacbd22eea62281891c67","mfd: intel-lpss: Add Intel Comet Lake PCI IDs","a93705cb705ace7764d24a5044ed5219cc2edcd4",
"2a018453dec06fa0092c2be0a1cc1035c45816e6","BACKPORT: FROMLIST: r8152: Refresh MAC address during USBDEVFS_RESET","7f13c4849dcaf10ee0de22c333964e4b3cda26d9","25766271e42f6b15b72ba156cb42a3fea91b5b21","r8152: Refresh MAC address during USBDEVFS_RESET","cc2e9d66b4621b536b546946cfc49d27385ce1cb",
"bc03a53a430cc4b8ac0b37aaf02bac111bdf9a50","FROMLIST: Revert ""drm/virtio: drop prime import/export callbacks""","1ec2fe5b3ccfbeb1a30cc955323226aba2badfe0","a0cecc23cfcbf2626497a8c8770856dd56b67917","Revert ""drm/virtio: drop prime import/export callbacks""","1ebc59dac687aa472caae54622f424d793dd28b2",
"8cd737758a69106ac4b56f0b37934a0cac0d6bec","FROMLIST: BACKPORT: platform/chrome: wilco_ec: Add property helper library","6755b70702e180509b6fdcdf8c89c43e557ea453","0c0b7ea23aed0b55ef2f9803f13ddaae1943713d","platform/chrome: wilco_ec: Add property helper library","e67cfc889d6b867b98afc31a02dffcf6fc876182",
"5cda3702ac4340d8a7377381ce6906ce4211915f","FROMLIST: BACKPORT: power_supply: platform/chrome: wilco_ec: Add charging config driver","e7da96aa6b339a14fb96e641fd2207f98d14d8cd","3f57fe28f84d636ca6238f33afe8b88d27c34d1b","power_supply: wilco_ec: Add charging config driver","bb49078fe474f991d9a6623011320c144bf46959",
"366811d9373f3fd7315ef0827b891ddf02003b12","FROMLIST: mmc: sdhci-pci: Add support for Intel CML","daa4e5343600fac5f54a2df515146c8d18f6f45f","765c59675ab571caf7ada456bbfd23a73136b535","mmc: sdhci-pci: Add support for Intel CML","bf0f27e25ead11535cd1addedf75d8dba7d897ea",
"be9a9d7f91372dfda0bde2b45fa5bce7458b9ff3","FROMGIT: Bluetooth: hci_qca: Added support for WCN3998","e4ad913ca2ed794531d8a041f8f1e14c81d68bdc","523760b7ff8871281aaedc44c305926469ab47f8","Bluetooth: hci_qca: Added support for WCN3998","5274dcaff0522d74bc93d2ee7f62343e9875c7d2",
"22c9fd3d0b859b449af25b698d530c05b881fecb","FROMLIST: usb: dwc2: optionally assert phy reset when waking up","5acaa451f08b9e6cbceb2a38434f792d7a2ef1ea","c40cf7705e13d288d900e044c0a2f756e9e4909a","usb: dwc2: optionally assert phy reset when waking up","7706adb737b0b32e9476973eda7a59cf5ed1514d",
"285147f7f5c4a92335a002facdfd36da2b9c5959","FROMLIST: USB: dwc2: Don't turn off the usbphy in suspend if wakeup is enabled","231c88ab5c0eac1cacf31c6f05b7c495e3e592d6","c846b03ff767149d75d4d8dca6d3d4945a21074a","USB: dwc2: Don't turn off the usbphy in suspend if wakeup is enabled","f620c999cc7583b80e4f51e7caba05bb9a315101",
"9a655f4b2ff6739568e18ae7a7eae3b2929fb39e","FROMLIST: BACKPORT: platform/chrome: wilco_ec: Remove 256 byte transfers","4d621493ce80462135cfb3414904f21a06d2fd02","2ad1f7a91449de48d4bd5d1ec361ba7bb9026505","platform/chrome: wilco_ec: Remove 256 byte transfers","25932d8983a1534e5bdfb5577b801e97f66b8a8f",
"e4607402d2c02da6cd04142779ee9e27fb4ea0a0","FROMLIST: ASoC: Intel: Skylake: Add Cometlake PCI IDs","eb5ed1916e4d3ff912dea89a05dd87c28dec6541","5f740b243014f54e503ea5aca0a90680b56d0134","ASoC: Intel: Skylake: Add Cometlake PCI IDs","01e7db9cabc57a04f12cdf499b0b83a9cd3e7876",
"0eadc61a338afe7e9815bb384e253dfdca5aeb6a","BACKPORT: FROMLIST: arm64: dts: mt8183: Add auxadc device node","52e4ce37670982d223766450ce0ad1aeb19eeb7b","eb59b35331469f3348ef09743fd425318fd0aac5","arm64: dts: mt8183: Add auxadc device node","a9ed47eb806e4475b727024ff435629250046901",
"c4e3999a3bae828e20655195350fb89601381c81","BACKPORT: FROMLIST: arm64: dts: mt8183: add efuse and Mediatek Chip id node to read","bd1f932765b9ed0b095e4d3732067b516a519047","de1033881e936382d67ae47073a7092554729d74","arm64: dts: mt8183: add efuse and Mediatek Chip id node to read","12500832c5672b4c1edfd71721a35d2ec9f904f4",
"51d1285ed7cde10c45713259f30b305074664f71","BACKPORT: FROMGIT: mfd: cros_ec: Update the EC feature codes","6ff0be1505e1becf4adb64e7576ddb43d423a0e6","93abf68b6bcb50481d84db41e4d7e7e143f24757","mfd: cros_ec: Update the EC feature codes","adc28de46b75865a8ce049f40acfd784af42545d",
"5eadd78aa226ffa0243e238d590d7b2c982d5fe3","FROMLIST: mfd: cros_ec: differentiate SCP from EC by feature bit.","cb92e477cb323d2134d13c5bb0d76e6ef6cbb620","554e937ec8d75930bc711612208af27961e3dc61","mfd: cros_ec: differentiate SCP from EC by feature bit","34ac2dfde5f076f254ebf3f843151fb5cff9c869",
"f087f21f460d617275460c86e817c112f276facb","BACKPORT: FROMLIST: ARM: dts: rockchip: raise GPU trip point temperatures for veyron","c8d7c19c309011dbc93cae95619309bb838229a4","0f637e2565d175eeff664991be9a6d0753d0e484","ARM: dts: rockchip: raise GPU trip point temperatures for veyron","1aa48fd62425f2e86b172c2e948faec62b60a19d",
"744185b64768571fea0489de89e01b0f96343559","FROMLIST: BACKPORT: platform/chrome: wilco_ec: Add telemetry char device interface","5075de57aa733b7a0871039de8e43eb71982b35a","1210d1e6bad1e7ccccb19627b880a50d7c15dd51","platform/chrome: wilco_ec: Add telemetry char device interface","b72518e97b35abca70d36fc5128aec457f3735ee",
"0a5798a82a22db9049ce74a8ab170285a649c418","FROMLIST: scripts/decode_stacktrace: Look for modules with .ko.debug extension","2027636927921c9d3333dc53cdc3439aa68d789a","fe7d14f174f18745d8dc141377e5f85ae7757d66","scripts/decode_stacktrace: look for modules with .ko.debug extension","77ebfebdae6784bd6f80defcd5c515f485532156",
"45502052bd7f40c6a1ac6f01c20700844fa5d7d2","BACKPORT: FROMGIT: dmaengine: mediatek: Add MediaTek UART APDMA support","dd386ecb86cab4b52046a538fd0bb56be24ce5ce","9135408c3ace4f7201407b1ef79079c30340743e","dmaengine: mediatek: Add MediaTek UART APDMA support","3b9c2698106934638b706ae547c69a01c0e3c46e",
"9607a4f7c8396d44270fcaaddeb449ca355a80a2","FROMLIST: mm: smaps: split PSS into components","be9ea6151285efe71ef5a720ebd3937caf26a911","ee2ad71b0756e995fa4f6d922463e9bccd71b198","mm: smaps: split PSS into components","ad06c64c03b8ed4ecd9558ae9688f6f9802488b6",
"4465bd5a47080e477eecf4d2979c5c73280b5a5b","BACKPORT: FROMLIST: tpm: Fix TPM 1.2 Shutdown sequence to prevent future TPM operations","d3d8d917ab12cbf863c48c1d322b8be72d5c7918","db4d8cb9c9f2af71c4d087817160d866ed572cc9","tpm: Fix TPM 1.2 Shutdown sequence to prevent future TPM operations","700e6ed4a48f4cb2ca8ee6b0f1e7e0d7ac46ca42",
"960efabcd57f01f65cb14eb9a36b8a764f6d2221","BACKPORT: FROMLIST: iio: cros_ec: Add lid angle driver","9f5f36fc232e57efac4f633137ff31bc472a4e0d","0451cc8ce272f50f9fb6569b0ecdedee6e997cea","iio: cros_ec: Add lid angle driver","929274f1af1f19bcc1361a77b9696dd48184d479",
"57ee23de7490470069e34de04bd8fe96d6f247f5","BACKPORT: FROMLIST: security/loadpin: Allow to exclude specific file types","9f98d7ee2e18ce19a42e4b4741c01ad6ea56319c","0ff9848067b7b950a4ed70de7f5028600a2157e3","security/loadpin: Allow to exclude specific file types","7c6f32c465f9e0685374fc3862ae698a10ccc4d7",
"50c64bd149c8f9d5eb43a7ec2e28df437493b881","FROMGIT: mm: vmscan: fix not scanning anonymous pages when detecting file refaults","5b90c089adac164502ca7226ee03dad4513c590e","2c012a4ad1a2cd3fb5a0f9307b9d219f84eda1fa","mm: vmscan: scan anonymous pages on file refaults","e64bc16ae18315129b354b8d8b5c62506a0700d9",
"1aaf946502c1e0ed50eaee53c3fae3f6bbdec863","BACKPORT: FROMGIT: nvme-pci: Fix controller freeze wait disabling","065878d472ca3db7babdde463d165aba1fcc828d","e43269e6e5c49d7fec599e6bba71963935b0e4ba","nvme-pci: Fix controller freeze wait disabling","62e58296c46f282e74ce9fbcfe6665a94c427865",
"55ec8a1f42b0da59b8bfd40d2cbcba496c0a758c","FROMGIT: nvme-pci: Don't disable on timeout in reset state","ae8c27ed905ae0e13642a53616092d105afd2550","39a9dd81f864aa20be896bb34b4bbc2501a2453d","nvme-pci: Don't disable on timeout in reset state","f103868489b4c9172a0750977693b294c27aa4c9",
"9e9f138440cfca9b9726d6128f2d0cf6854eb28f","BACKPORT: FROMGIT: nvme-pci: Sync queues on reset","f359ce87100f6cf4c1709e674388727a66fa0228","d6135c3a1ec0cddda7b8b8e1b5b4abeeafd98289","nvme-pci: Sync queues on reset","e781ba3a87d30e332b493d84979e2c7d46ce25f4",
"5ddf440d305adbbc31743c784ea744c4ee7cf465","FROMGIT: nvme: Export get and set features","aca97b2313bd9149b59dd9810cb229b86573b300","1a87ee657c530bb2f3e39e4ac184d48f5f959cda","nvme: export get and set features","a72bdebdc38ca5d064c7b7e4f8e35698af33354f",
"bc7304877066a781782a7b43ea0ed2edcc767637","BACKPORT: FROMGIT: nvme-pci: Use host managed power state for suspend","db59390e1dd15041cf59b5f2cd249f1fad500506","d916b1be94b6dc8d293abed2451f3062f6af7551","nvme-pci: use host managed power state for suspend","6379b9852c047cedac041343a8bc6c3c53e354ef",
"ef866daa8580c5c00e9a43f3494bf424b5d6ab65","UPSTREAM: OPP: Fix handling of multiple power domains","cb4245a944eeb7b047c21419b7274cb092764416","55286a29389a1a30fb2ccc83ef9315809946b365","OPP: Fix handling of multiple power domains","cb4245a944eeb7b047c21419b7274cb092764416",
"e363f05f062928dc818e81ed526a5ef68f949b2b","UPSTREAM: opp: Attach genpds to devices from within OPP core","92eda547ac0161c6684b1f19859193e031ed53c5","6319aee10e530315689db7609a7d4c444124ff22","opp: Attach genpds to devices from within OPP core","dacb5933bda5cf5959a5f9c381f1c9d967eedb19",
"ac2fd9ff0a0e727fb088a6b722461b3eef5fbb96","UPSTREAM: PM / devfreq: refactor set_target frequency function","5f5487cbafb393b3eb512c505b9ef06962147139","633141721b5bfce7017033a767208af591134b8f","PM / devfreq: refactor set_target frequency function","5f5487cbafb393b3eb512c505b9ef06962147139",
"047e719bf5db379be4f887aa358457ab339d687e","UPSTREAM: cpufreq: Call transition notifier only once for each policy","cb3178d6c59d08f005d18cd7ae005c681a4c63c3","df24014abe3694e7c34ce5e50248611b7a93fe83","cpufreq: Call transition notifier only once for each policy","4a8da686d654d2b0c18b3ee0f76a3bd5c0c83eda",
"7785514f58514ced8c7910aa5cbb7ca2a21d0399","BACKPORT: FROMLIST: x86/purgatory: do not use __builtin_memcpy and __builtin_memset","b4505e2de3c43841e871519c71a8ff4980a9b814","4ce97317f41d38584fb93578e922fcd19e535f5b","x86/purgatory: Do not use __builtin_memcpy and __builtin_memset","bc766509fc91934468a305238792db38e47ac4e1",
"6437ec34f301c09029c1a67b9f461211ab31e73c","FROMLIST: KBUILD_CFLAGS is very carefully built up in the top level Makefile, particularly when cross compiling or using different build tools. Resetting KBUILD_CFLAGS via := assignment is an antipattern.","0474509080aae2393cbb0f01cbc51eb82b051fa6","b059f801a937d164e03b33c1848bb3dca67c0b04","x86/purgatory: Use CFLAGS_REMOVE rather than reset KBUILD_CFLAGS","9ca767acd26da3def90d5142a462a05fe749c7ca",
"597aa9cf977f8b971fdf7dd5f1dc3e1a4a1aa7bb","FROMLIST: platform/x86: intel_pmc_core: Attach using APCI HID ""INT33A1""","576e7b7f802124ebb8491b55507d93ecbe1bfc6c","b02f6a2ef0a14af5c19780521370673f55c1476d","platform/x86: intel_pmc_core: Attach using APCI HID ""INT33A1""","e994f31d483e3b6f6043730aa3ab9ceaf03d23ac",
"b5811c5300a5c82d0f92455050920b5071fa195f","BACKPORT/FROMGIT: drm/i915/vbt: Fix VBT parsing for the PSR section","81d74c6f99e3196b0c6534b89045dd00741893de","6d61f716a01ec0e134de38ae97e71d6fec5a6ff6","drm/i915/vbt: Fix VBT parsing for the PSR section","a82cc0372fa205b20b410231cece079a880c4f6d",
"4460abd2fdc74d836270f0d6c30581e52593470c","ANDROID: fs: epoll: use freezable blocking call","80d9536c91f45d6940b5d61a6960ba7b2bedf802","1c441e921201d523b5a6036aea22b0b426bf1af2","epoll: use freezable blocking call","f7ebb8932b3aca5c59f2a97e719666f185c061e8",
"164714675cdcef9a79b86668cf3746667042b4cd","CHROMIUM: arm64: dts: qcom: Add smd845-cheza(-r1,-r2,-r3)","6dbf7ef57b5170afb84fc1f3a17fa29d5ffa40a8","79e7739f7b877d05de8f162a3ae8006657436df0","arm64: dts: qcom: sdm845-cheza: add initial cheza dt","d8d96652ac9c4a073c6e500e9b5adb07f4232f7b",
"89529daf0cb1cec03b17cc2855460d8cb1e42e9b","CHROMIUM: arm64: dts: qcom: sdm845-cheza: Add qspi nodes for SPI flash","18a47744ce51d1fb98afb99bd51e754159dff9a4","79e7739f7b877d05de8f162a3ae8006657436df0","arm64: dts: qcom: sdm845-cheza: add initial cheza dt","d8d96652ac9c4a073c6e500e9b5adb07f4232f7b",
"280e8b8160c57c62e4d1b15d44c872962fe043a9","CHROMIUM: arm64: dts: qcom: sdm845-cheza: Enable uart6","ca9ce7449620c697ecddee8c53301285c6d2eaad","79e7739f7b877d05de8f162a3ae8006657436df0","arm64: dts: qcom: sdm845-cheza: add initial cheza dt","d8d96652ac9c4a073c6e500e9b5adb07f4232f7b",
"412423fb5d016c1caf79c634e01dc463f118745e","CHROMIUM: iio: cros_ec: add comment for cros_ec_sensors_read_lpc","7309006612cbc75cf2c04c4f6781b0bbff330d6f","ad9cc622f10116046a88181e8c2f7d6a19af7fc0","iio: cros_ec: Add kernel-doc for cros_ec_sensors_read_lpc","2d5f7b0041eb2ced130cedebac233c8e4bd6128a",
"9db29185a6b77f109d3f8e17f54a203bec3a93e7","CHROMIUM: cros_ec: instantiate properly FP MCU device","aefa6600d22a96631b84451c43ff6a1a1fd53e07","90486af5e0f7334091b94264a84713611933e97e","mfd: cros_ec: Instantiate properly CrOS FP MCU device","487bcf344039a7f6480c540f1b94d5244d2294bd",
"c9169223020420ba6fb8dc37a70a556bc6ae8c82","CHROMIUM: cros_ec: instantiate properly Touchpad MCU device","2746ed1ce0ef7e43a8a4e6b8ebfd906ec5c9f73e","4f8f2bb7ab032150ba94cf60ea5aaf3e3ac3d2ca","mfd: cros_ec: Instantiate properly CrOS Touchpad MCU device","c7768df8d0a2a96e6995626f2d80da505e1882e8",
"f05647f6156c7dc3198d1f559ba674d2997a3975","CHROMIUM: ASoC: Intel: Add Geminilake Realtek+Maxim machine driver entry","8f4e4336bac69d079c4d81584c32beea74a62fb4","d3692cb5c56daa2fb8046a8f4ebe1b2b8b22c895","ASoC: Intel: common: add Geminilake Realtek+Maxim machine driver entry","6a041897f413e0eed9ba61259bc88a93ed58e6d1",
"2af95ded9cf71508cb27a7b36c57ec290c44feca","CHROMIUM: arm64: dts: qcom: sdm845: Add UFS to Cheza","ba4d00c2d1c39664cf8b3a923f0267408af8cae4","79e7739f7b877d05de8f162a3ae8006657436df0","arm64: dts: qcom: sdm845-cheza: add initial cheza dt","d8d96652ac9c4a073c6e500e9b5adb07f4232f7b",
"bed65fe25e1774d6d9b11573eefc74c2c11d53af","CHROMIUM: arm64: dts: qcom: sdm845-cheza: drop write-protect from 'chromeos-firmware'","089c9174922e876b1b41772d3ca10734971bf8e6","79e7739f7b877d05de8f162a3ae8006657436df0","arm64: dts: qcom: sdm845-cheza: add initial cheza dt","d8d96652ac9c4a073c6e500e9b5adb07f4232f7b",
"d0e0f3d8f76db360da3ea40ba9de0980d9990be8","CHROMIUM: arm64: dts: qcom: sdm845-cheza: No pulls for BT UART","2b4cd752b04cb8d8841bd22d780463fff16a6061","79e7739f7b877d05de8f162a3ae8006657436df0","arm64: dts: qcom: sdm845-cheza: add initial cheza dt","d8d96652ac9c4a073c6e500e9b5adb07f4232f7b",
"aa967c724c0ff1f336d7c2bae97dfae6493fd655","CHROMIUM: iwl7000: Update backport tree","05b4321481169ceb7a46ca1c5d3bdc8ca89edf4d","c0dbc564c92cb6882b96531de05efca9bb030d46","CHROMIUM: iwl7000: Merge remote-tracking branch 'local_auto/master' into merge","7cc441661a394b33de557e9e99fac45c93897cd2",
"2b45e1d54cd80cb1f9d39ec09979c07291effee9","CHROMIUM: arm64: dts: qcom: add bridge chip & panel to sdm845-cheza","2748320adebfbfcd09e5f79a12cad022a4728176","79e7739f7b877d05de8f162a3ae8006657436df0","arm64: dts: qcom: sdm845-cheza: add initial cheza dt","d8d96652ac9c4a073c6e500e9b5adb07f4232f7b",
"435950fece97997fd3ac1acb0943f58b627b56cd","CHROMIUM: arm64: dts: qcom: Enable SD on sdm845-cheza","ae3986581a4c8b1388bbe972db41b9113fd94090","79e7739f7b877d05de8f162a3ae8006657436df0","arm64: dts: qcom: sdm845-cheza: add initial cheza dt","d8d96652ac9c4a073c6e500e9b5adb07f4232f7b",
"7f9e11b9fd6f841d14e94f7630bb57206b7f05c8","CHROMIUM: arm64: dts: qcom: sdm845-cheza: Increase mpss/rmtfs memory","03506692b464894b547d9af81c1f04685a6fc9a4","79e7739f7b877d05de8f162a3ae8006657436df0","arm64: dts: qcom: sdm845-cheza: add initial cheza dt","d8d96652ac9c4a073c6e500e9b5adb07f4232f7b",
"6abd58c064cc9a39b142c634a92d2db0d71ec77d","CHROMIUM: cros_ec: add EC_FEATURE_MOTION_SENSE_TIGHT_TIMESTAMPS","e9237439c99a6816d7a5c288cde0053f72902612","93abf68b6bcb50481d84db41e4d7e7e143f24757","mfd: cros_ec: Update the EC feature codes","adc28de46b75865a8ce049f40acfd784af42545d",
"90e5e4be11835c24594da668cf83fec7d98adf43","CHROMIUM: arm64: dts: qcom: sdm845-cheza: Temporarily delete reserved-mem changes","ceec27622ff69c714845f35ee6f27bf5a800374a","79e7739f7b877d05de8f162a3ae8006657436df0","arm64: dts: qcom: sdm845-cheza: add initial cheza dt","d8d96652ac9c4a073c6e500e9b5adb07f4232f7b",
"799daf43392b6274a568f5a4d3447cba232f6a02","CHROMIUM: arm64: dts: qcom: sdm845-cheza: Re-add reserved memory","17fe8efd7822000a3e0ddce8f70d8b614afe865a","79e7739f7b877d05de8f162a3ae8006657436df0","arm64: dts: qcom: sdm845-cheza: add initial cheza dt","d8d96652ac9c4a073c6e500e9b5adb07f4232f7b",
"3af8b08a6c01977eb2bab1fb2f97a495f14d2b49","CHROMIUM: drm/virtio: Ensure cached capset entries are valid before copying.","4e7449008df01304af1289e4d2eb7c7900a2d5d8","7fdf478a43869bee27e1b50955830f6ebc730b67","drm/virtio: Ensure cached capset entries are valid before copying.","61734e1d752ad118f71214604840a4361c2692cf",
"fbd186c14e31e9bb7e220b862430033f3361e3bc","CHROMIUM: drm/virtio: Add memory barriers for capset cache.","b333e439e055305999b2d9affc9c70c5cc977b24","9ff3a5c88e1f1ab17a31402b96d45abe14aab9d7","drm/virtio: Add memory barriers for capset cache.","76f119bf50acb3bc19643e7788953f03ec2881ef",
"15781cbd53c369c2b11c4947d597993ca0ea6bc7","CHROMIUM: drm/i915: Add missing access checks in i915_gem_execbuffer2_ioctl","f924f88381100b93607aa937e9a30b66f1c40425","594cc251fdd0d231d342d88b2fdff4bc42fb0690","make 'user_access_begin()' do 'access_ok()'","bac96d8937e00016a8372c2ff34e575bb419f2f9",
"5e82274a1a662a7f8b9ac9f3251052d9f23a47a8","CHROMIUM: mm: fix divide error in smaps_account","f18952800763840c4a5da22bacc1393afb0a8589","ee2ad71b0756e995fa4f6d922463e9bccd71b198","mm: smaps: split PSS into components","ad06c64c03b8ed4ecd9558ae9688f6f9802488b6",
"609d9c825d071bdccda7cf330fe791e65775d4d1","CHROMIUM: power: supply: cros-usbpd-charger: Add charge_control_limit_max","8302f9da859f96d20ba8f7cf8533c887f804798d","2ffb500d824bbe6535c64d3e7e9971cca0db0a3e","power: supply: cros: allow to set input voltage and current limit","55a631c95fc0a72866dda087bb2ed821cf40d4d1",
"22bd488f5bfd457167372ea73c57300d586ca53e","CHROMIUM: arm: add arch_sync_dma_for_*()","6fe71f457585f4b4032c35f17f23a8351df08532","ad3c7b18c5b362be5dbd0f2c0bcf1fd5fd659315","arm: use swiotlb for bounce buffering on LPAE configs","f023a503ff5fa24b8d229ea512e29ab767ed0372",
