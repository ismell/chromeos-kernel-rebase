From 40fdbf005b1c08012ea7e6fc3fda2c26268cb099 Mon Sep 17 00:00:00 2001
From: Andrey Pronin <apronin@chromium.org>
Date: Thu, 6 Apr 2017 13:34:20 -0700
Subject: [PATCH] CHROMIUM: tpm: block messages while suspended

Other drivers or userspace may initiate sending a message to the tpm
while the device itself and the controller of the bus it is on are
suspended. That may break the bus driver logic.
Block sending messages while the device is suspended.

BUG=b:35648537
TEST=Continuously send messages to the tpm, go through suspend
     to S0ix and back. Check that messages are rejected while
     the tpm is suspended, and the tpm is accessible after resume.

Change-Id: If5e2ee33ecb9e8e4afec20b2cf1b232b42859547
Signed-off-by: Andrey Pronin <apronin@chromium.org>
Reviewed-on: https://chromium-review.googlesource.com/470747
Reviewed-by: Duncan Laurie <dlaurie@google.com>
Conflicts:
	drivers/char/tpm/tpm-interface.c
	drivers/char/tpm/tpm.h
[rebase412(groeck): Resolved conflicts (context changes)]
Signed-off-by: Guenter Roeck <groeck@chromium.org>

Conflicts:
	drivers/char/tpm/tpm-interface.c
	drivers/char/tpm/tpm.h

[rebase419(groeck): Resolved conflicts (context changes)]
Signed-off-by: Guenter Roeck <groeck@chromium.org>
---
 drivers/char/tpm/tpm-interface.c | 10 ++++++++++
 drivers/char/tpm/tpm.h           |  2 ++
 2 files changed, 12 insertions(+)

diff --git a/drivers/char/tpm/tpm-interface.c b/drivers/char/tpm/tpm-interface.c
index 1a803b0cf980..d294a835702e 100644
--- a/drivers/char/tpm/tpm-interface.c
+++ b/drivers/char/tpm/tpm-interface.c
@@ -466,6 +466,11 @@ static ssize_t tpm_try_transmit(struct tpm_chip *chip,
 		return -E2BIG;
 	}
 
+	if (test_bit(0, &chip->is_suspended)) {
+		dev_warn(&chip->dev, "blocking transmit while suspended\n");
+		return -EAGAIN;
+	}
+
 	if (!(flags & TPM_TRANSMIT_UNLOCKED) && !(flags & TPM_TRANSMIT_NESTED))
 		mutex_lock(&chip->tpm_mutex);
 
@@ -1212,6 +1217,7 @@ int tpm_pm_suspend(struct device *dev)
 
 	if (chip->flags & TPM_CHIP_FLAG_TPM2) {
 		tpm2_shutdown(chip, TPM2_SU_STATE);
+		set_bit(0, &chip->is_suspended);
 		return 0;
 	}
 
@@ -1248,6 +1254,9 @@ int tpm_pm_suspend(struct device *dev)
 		dev_warn(&chip->dev, "TPM savestate took %dms\n",
 			 try * TPM_TIMEOUT_RETRY);
 
+	if (!rc)
+		set_bit(0, &chip->is_suspended);
+
 	return rc;
 }
 EXPORT_SYMBOL_GPL(tpm_pm_suspend);
@@ -1263,6 +1272,7 @@ int tpm_pm_resume(struct device *dev)
 	if (chip == NULL)
 		return -ENODEV;
 
+	clear_bit(0, &chip->is_suspended);
 	return 0;
 }
 EXPORT_SYMBOL_GPL(tpm_pm_resume);
diff --git a/drivers/char/tpm/tpm.h b/drivers/char/tpm/tpm.h
index 7629b5d902f5..3ede130236bb 100644
--- a/drivers/char/tpm/tpm.h
+++ b/drivers/char/tpm/tpm.h
@@ -257,6 +257,8 @@ struct tpm_chip {
 	int dev_num;		/* /dev/tpm# */
 	unsigned long is_open;	/* only one allowed */
 
+	unsigned long is_suspended;
+
 	char hwrng_name[64];
 	struct hwrng hwrng;
 
-- 
2.23.0.187.g17f5b7556c-goog

