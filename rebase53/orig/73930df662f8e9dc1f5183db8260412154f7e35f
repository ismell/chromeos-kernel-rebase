From 73930df662f8e9dc1f5183db8260412154f7e35f Mon Sep 17 00:00:00 2001
From: Douglas Anderson <dianders@chromium.org>
Date: Mon, 6 May 2019 10:59:23 -0700
Subject: [PATCH] CHROMIUM: sched/fair: Kill spam about max cpu_capacity

When thermal throttling is happening on a system the serial console
log can get really, really chatty if you've got CONFIG_SCHED_DEBUG
turned on.  On some machines that thermally throttle all the time,
like rk3288-veyron-mickey, we see ~5 spams a second.

This chattiness is rarely super useful.  Let's just kill it.

NOTES:
1. Another option here might be to turn it into pr_debug.  I opted not
   to do this because I noticed that on 4.4 we had actually found a
   deadlock with this particular printout.  See
   <https://crrev.com/c/420092>.  Rather than dig to see if the
   deadlock has been worked around in other ways, it seemed more
   expedient to just kill it.
2. In theory we could turn off CONFIG_SCHED_DEBUG.  I seem to remember
   we kept this on for some good reason but I can't seem to find out
   why.  Since we've had CONFIG_SCHED_DEBUG on for all prior kernels
   I'm going to assume we still want it.

NOTE: The chattiness comes from commit 2b98b9f66c93 ("ANDROID: sched:
Update max cpu capacity in case of max frequency constraints") which
is not an upstream commit.  Hence this is a CHROMIUM patch.  I presume
that as EAS make it more upstream they will either not have this spam
or we can post this upstream when the spam is there.

BUG=chromium:941638
TEST=No more log spam

Change-Id: Ia208861de5e7b7ef6350f881321e448df47713a8
Signed-off-by: Douglas Anderson <dianders@chromium.org>
Reviewed-on: https://chromium-review.googlesource.com/1597412
Reviewed-by: Nicolas Boichat <drinkcat@chromium.org>
Reviewed-by: Quentin Perret <quentin.perret@arm.com>
Reviewed-by: Sonny Rao <sonnyrao@chromium.org>
---
 kernel/sched/fair.c | 6 ------
 1 file changed, 6 deletions(-)

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index 0a236ddcb354..eef56106ec82 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -8470,15 +8470,9 @@ static void update_cpu_capacity(struct sched_domain *sd, int cpu)
 	    (max_capacity < capacity)) {
 		mcc->val = capacity;
 		mcc->cpu = cpu;
-#ifdef CONFIG_SCHED_DEBUG
-		raw_spin_unlock_irqrestore(&mcc->lock, flags);
-		pr_info("CPU%d: update max cpu_capacity %lu\n", cpu, capacity);
-		goto skip_unlock;
-#endif
 	}
 	raw_spin_unlock_irqrestore(&mcc->lock, flags);
 
-skip_unlock: __attribute__ ((unused));
 	capacity = scale_rt_capacity(cpu, capacity);
 
 	if (!capacity)
-- 
2.23.0.187.g17f5b7556c-goog

